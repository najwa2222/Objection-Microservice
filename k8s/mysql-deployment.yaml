apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: crda-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      # 2) Ensure the mysql user inside the pod can write the PV
      securityContext:
        fsGroup: 999

      # 1) Clear out any old data before MySQL ever starts
      initContainers:
      - name: clear-mysql-data
        image: busybox:1.35
        command:
          - sh
          - -c
          - |
            if [ ! -f /var/lib/mysql/.initialized ]; then
              echo ">>> First-time init: emptying /var/lib/mysqlâ€¦"
              rm -rf /var/lib/mysql/* /var/lib/mysql/.* 2>/dev/null || true
              touch /var/lib/mysql/.initialized
            else
              echo ">>> Data directory already initialized; skipping wipe."
            fi
        volumeMounts:
          - name: mysql-pvc
            mountPath: /var/lib/mysql

      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: root-password
        - name: MYSQL_USER
          value: "app_user"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: app-password
        - name: MYSQL_ARGS
          value: "--default-authentication-plugin=mysql_native_password"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-pvc
          mountPath: /var/lib/mysql
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        - name: custom-config
          mountPath: /etc/mysql/conf.d/my.cnf
          subPath: my.cnf

        # Commented out probes temporarily to debug startup failure
        # livenessProbe:
        #   exec:
        #     command:
        #       - sh
        #       - -c
        #       - mysqladmin ping -u"$MYSQL_USER" -p"$MYSQL_PASSWORD"
        #   initialDelaySeconds: 45
        #   periodSeconds: 15
        #   failureThreshold: 3

        # readinessProbe:
        #   exec:
        #     command:
        #       - sh
        #       - -c
        #       - mysqladmin ping -uroot -p"$MYSQL_ROOT_PASSWORD"
        #   initialDelaySeconds: 15
        #   periodSeconds: 10
        #   failureThreshold: 3

      volumes:
      - name: mysql-pvc
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: init-script
        configMap:
          name: mysql-init-script
      - name: custom-config
        configMap:
          name: mysql-config
